#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'pivt_version'
require 'open-uri'
require 'httparty'
require 'rainbow'

include GLI

program_desc 'Describe your application here'

version Pivt::VERSION

desc 'Username'
flag [:u,:username]

desc 'Password'
flag [:p,:password]

desc 'Project'
flag :project

desc 'List your work on the current project'
arg_name 'Describe arguments to list here'
command :list do |c|
  c.action do |global_options,options,args|
    response = HTTParty.get('https://www.pivotaltracker.com/services/v3/tokens/active', {:basic_auth => {:username => global_options[:u], :password => global_options[:p]}})

    response = HTTParty.get('http://www.pivotaltracker.com/services/v3/projects/523551/stories?filter=mywork%3AAndrew%20Terris', {:headers => {'X-TrackerToken' => response['token']['guid']}})
    stories = response['stories']

    count = 0
    stories.each do |story|
      case story['current_state']
      when 'started'
        puts sprintf(" #{count}: #{story['id']} - #{story['name']}".color(:green))
      when 'unstarted'
        puts sprintf(" #{count}: #{story['id']} - #{story['name']}")
      when 'unscheduled'
      else
      end
      count += 1
    end
  end
end

desc 'Describe start here'
arg_name 'Describe arguments to start here'
command :start do |c|
  c.action do |global_options,options,args|
  end
end

desc 'Describe finish here'
arg_name 'Describe arguments to finish here'
command :finish do |c|
  c.action do |global_options,options,args|
  end
end

desc 'Describe deliver here'
arg_name 'Describe arguments to deliver here'
command :deliver do |c|
  c.action do |global_options,options,args|
  end
end

desc 'Describe accept here'
arg_name 'Describe arguments to accept here'
command :accept do |c|
  c.action do |global_options,options,args|
  end
end

desc 'Describe reject here'
arg_name 'Describe arguments to reject here'
command :reject do |c|
  c.action do |global_options,options,args|
  end
end

desc 'Describe comment here'
arg_name 'Describe arguments to comment here'
command :comment do |c|
  c.action do |global_options,options,args|
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
