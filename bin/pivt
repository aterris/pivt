#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'pivt_version'
require 'rainbow'
require 'pivotal-tracker'

include GLI

program_desc 'Pivt is a Pivotal Tracker CLI for getting shit done'

version Pivt::VERSION

desc 'Username'
flag [:u,:username]

desc 'Password'
flag [:p,:password]

desc 'Project ID'
flag :project

desc 'List Pivotal tasks'
long_desc """
Lists Pivotal tasks for the current project.  By default it lists
your current and scheduled tasks only.  A filter can be passed as 
an argument to return different sets of tasks.
"""
arg_name 'filter'
command [:list, :l, :ls, :me, :mine] do |c|
  c.action do |global_options,options,args|

    PivotalTracker::Client.token global_options[:u], global_options[:p]
    @project = PivotalTracker::Project.find(global_options[:project])
    @tasks = @project.stories.all(:mywork => 'Andrew Terris')

    count = 0
    @tasks.each do |task|
      case task.current_state
      when 'started'
        puts sprintf(" #{count}: #{task.id} - #{task.name}".color(:green))
      when 'unstarted'
        puts sprintf(" #{count}: #{task.id} - #{task.name}")
      when 'unscheduled'
      else
      end
      count += 1
    end
  end
end

pre do |global,command,options,args|
  true
end

post do |global,command,options,args|
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
